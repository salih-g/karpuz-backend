generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mongodb"
  url      = env("MONGO_URL")
}

model User {
  id       String    @id @default(auto()) @map("_id") @db.ObjectId
  username String    @unique
  password String
  role     Role      @default(USER)
  comments Comment[]
  likes    Like[]
  posts    Post[]
}

model Post {
  id        String    @id @default(auto()) @map("_id") @db.ObjectId
  body      String
  user      User      @relation(fields: [userId], references: [id])
  userId    String    @db.ObjectId
  likes     Like[]
  comments  Comment[]
  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt()
}

model Comment {
  id        String   @id @default(auto()) @map("_id") @db.ObjectId
  body      String
  user      User     @relation(fields: [userId], references: [id], onDelete: Cascade)
  userId    String   @db.ObjectId
  post      Post     @relation(fields: [postId], references: [id], onDelete: Cascade)
  postId    String   @db.ObjectId
  likes     Like[]
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt()
}

model Like {
  id        String   @id @default(auto()) @map("_id") @db.ObjectId
  user      User     @relation(fields: [userId], references: [id], onDelete: Cascade)
  comment   Comment? @relation(fields: [commentId], references: [id], onDelete: Cascade)
  userId    String   @db.ObjectId
  commentId String?  @db.ObjectId
  Post      Post?    @relation(fields: [postId], references: [id])
  postId    String?  @db.ObjectId
}

enum Role {
  USER
  ADMIN
}
